# vim:ft=sh:

g() {
  local a="$1"
  if [ $a ]; then
    g-$a "${@:2}"
   else
    git status
  fi
}

_nx_is_number() {
  local var="$1"
  if [ -n "$var" ] && [ "$var" -eq "$var" ] 2>/dev/null; then
    echo "true"
  else
    echo "false"
  fi
}

g-ir() {
  local v="$1"
  local is_num=$(_nx_is_number $v)
  if [ -z "$v" ]; then
    git rebase -i HEAD~10
  elif [ "$is_num" = "true" ]; then
    git rebase -i HEAD~$1
  elif [ "$v" = "root" ]; then
    git rebase -i --root
  else
    echo "arg must be an number"
  fi
}

g-add() {
  local v="$1"
  if [ -z "$v" ]; then
    git add --update .
  elif [ "$v" = "all" ]; then
    git add --all
  else
    git add "$@"
  fi
}

gc() {
  local v="$1"
  if [ -z "$v" ]; then
    echo "gc: missing args"
  elif [ "$v" = "am" ]; then
    git commit --amend "${@:2}"
  elif [ "$v" = "first" ]; then
    git commit -m "first commit"
  elif [ "$v" = "wip" ]; then
    git commit -m "WIP"
  elif [ "$v" = "rev" ]; then
    git commit -m "rev"
  else
    git commit -v "$@"
  fi
}

# write
alias gb='git branch'
alias gpushb='git push origin HEAD'
alias git-cherry='git cherry-pick'
alias gt='git tag -a -m'


# danger
alias gr='git reset'
alias grl='git reset HEAD~1'
alias gco='git checkout'
alias grcon='git rebase --continue'
alias grab='git rebase --abort'

# stats
alias gl='git log'
alias glg='git log --all --graph --oneline --decorate'
alias gd='git diff'
alias gdc='git diff --cached'
alias gcount='git rev-list HEAD --count'

# other
alias clone="git clone"
alias remote="git remote"
alias push="git push"
alias pull="git pull"

g-branch-url() {
  echo `cat .mygiturl`/commits/`g-branch`
}

g-branch() {
  git symbolic-ref --short HEAD
}

g-example() {
  local v="$1"
  if [ -z "$v" ]; then
    git add --update .
  elif [ "$v" = "all" ]; then
    git add --all
  else
    git add "$@"
  fi
}

